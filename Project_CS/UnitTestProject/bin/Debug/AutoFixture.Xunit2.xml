<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AutoFixture.Xunit2</name>
    </assembly>
    <members>
        <member name="T:AutoFixture.Xunit2.AutoDataAttribute">
            <summary>
            Provides auto-generated data specimens generated by AutoFixture as an extension to
            xUnit.net's Theory attribute.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.AutoDataAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/> class.
            </summary>
            <remarks>
            <para>
            This constructor overload initializes the <see cref="P:AutoFixture.Xunit2.AutoDataAttribute.Fixture"/> to an instance of
            <see cref="P:AutoFixture.Xunit2.AutoDataAttribute.Fixture"/>.
            </para>
            </remarks>
        </member>
        <member name="M:AutoFixture.Xunit2.AutoDataAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/> class with an
            <see cref="T:AutoFixture.IFixture"/> of the supplied type.
            </summary>
            <param name="fixtureType">The type of the composer.</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fixtureType"/> does not implement <see cref="T:AutoFixture.IFixture"/>
            or does not have a default constructor.
            </exception>
        </member>
        <member name="M:AutoFixture.Xunit2.AutoDataAttribute.#ctor(AutoFixture.IFixture)">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/> class with the
            supplied <see cref="T:AutoFixture.IFixture"/>.
            </summary>
            <param name="fixture">The fixture.</param>
        </member>
        <member name="M:AutoFixture.Xunit2.AutoDataAttribute.#ctor(System.Func{AutoFixture.IFixture})">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/> class
            with the supplied <paramref name="fixtureFactory"/>. Fixture will be created
            on demand using the provided factory.
            </summary>
            <param name="fixtureFactory">The fixture factory used to construct the fixture.</param>
        </member>
        <member name="P:AutoFixture.Xunit2.AutoDataAttribute.Fixture">
            <summary>
            Gets the fixture used by <see cref="M:AutoFixture.Xunit2.AutoDataAttribute.GetData(System.Reflection.MethodInfo)"/> to create specimens.
            </summary>
        </member>
        <member name="P:AutoFixture.Xunit2.AutoDataAttribute.FixtureType">
            <summary>
            Gets the type of <see cref="P:AutoFixture.Xunit2.AutoDataAttribute.Fixture"/>.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.AutoDataAttribute.GetData(System.Reflection.MethodInfo)">
            <summary>
            Returns the data to be used to test the theory.
            </summary>
            <param name="testMethod">The method that is being tested.</param>
            <returns>The theory data generated by <see cref="P:AutoFixture.Xunit2.AutoDataAttribute.Fixture"/>.</returns>
        </member>
        <member name="T:AutoFixture.Xunit2.CompositeDataAttribute">
            <summary>
            An implementation of DataAttribute that composes other DataAttribute instances.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.CompositeDataAttribute.#ctor(System.Collections.Generic.IReadOnlyCollection{Xunit.Sdk.DataAttribute})">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.CompositeDataAttribute"/> class.
            </summary>
            <param name="attributes">The attributes representing a data source for a data theory.
            </param>
        </member>
        <member name="M:AutoFixture.Xunit2.CompositeDataAttribute.#ctor(Xunit.Sdk.DataAttribute[])">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.CompositeDataAttribute"/> class.
            </summary>
            <param name="attributes">The attributes representing a data source for a data theory.
            </param>
        </member>
        <member name="P:AutoFixture.Xunit2.CompositeDataAttribute.Attributes">
            <summary>
            Gets the attributes supplied through one of the constructors.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.CompositeDataAttribute.GetData(System.Reflection.MethodInfo)">
            <summary>
            Returns the composition of data to be used to test the theory. Favors the data returned
            by DataAttributes in ascending order. Data already returned is ignored on next
            DataAttribute returned data.
            </summary>
            <param name="testMethod">The method that is being tested.</param>
            <returns>
            Returns the composition of the theory data.
            </returns>
            <remarks>
            The number of combined data sets is restricted to the length of the attribute which provides the fewest data sets.
            </remarks>
        </member>
        <member name="T:AutoFixture.Xunit2.CustomizeAttribute">
            <summary>
            Base class for customizing parameters in methods decorated with
            <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.CustomizeAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization for a parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns></returns>
        </member>
        <member name="M:AutoFixture.Xunit2.EnumerableExtensions.Zip``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Func{System.Collections.Generic.IEnumerable{``0},``1})">
            <summary>
            Applies a specified function to the corresponding elements of any number of sequences.
            </summary>
            <typeparam name="T">The type of the elements of the input sequences.</typeparam>
            <typeparam name="TResult">The type of the elements of the result sequence.</typeparam>
            <param name="sequences">The input sequences.</param>
            <param name="resultSelector">A function that specifies how to combine the corresponding elements of the sequences.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains elements of the input sequences, combined by resultSelector.</returns>
        </member>
        <member name="M:AutoFixture.Xunit2.EnumerableExtensions.Collapse``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Collapses a series of sequences down by using items from the first sequence until it finishes,
            then continuing from the same index through the second sequence, and so on until all sequences
            have been exhausted.
            </summary>
            <typeparam name="T">The type of the elements of the input sequences.</typeparam>
            <param name="sequences">The input sequences.</param>
            <returns>Items from each sequence in turn, yielding those from the first sequence first.</returns>
        </member>
        <member name="T:AutoFixture.Xunit2.FavorArraysAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should be created using a constructor with one
            or more array arguments, if applicable.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.FavorArraysAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization that associates a <see cref="T:AutoFixture.Kernel.ArrayFavoringConstructorQuery"/> with
            the <see cref="T:System.Type"/> of the parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns>
            A customization that associates a <see cref="T:AutoFixture.Kernel.ArrayFavoringConstructorQuery"/> with the
            <see cref="T:System.Type"/> of the parameter.
            </returns>
        </member>
        <member name="T:AutoFixture.Xunit2.FavorEnumerablesAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should be created using a constructor with one
            or more <see cref="T:System.Collections.Generic.IEnumerable`1" /> arguments, if applicable.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.FavorEnumerablesAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization that associates a <see cref="T:AutoFixture.Kernel.EnumerableFavoringConstructorQuery"/>
            with the <see cref="T:System.Type"/> of the parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns>
            A customization that associates a <see cref="T:AutoFixture.Kernel.EnumerableFavoringConstructorQuery"/> with
            the <see cref="T:System.Type"/> of the parameter.
            </returns>
        </member>
        <member name="T:AutoFixture.Xunit2.FavorListsAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should be created using a constructor with one
            or more <see cref="T:System.Collections.Generic.IList`1" /> arguments, if applicable.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.FavorListsAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization that associates a <see cref="T:AutoFixture.Kernel.ListFavoringConstructorQuery"/> with
            the <see cref="T:System.Type"/> of the parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns>
            A customization that associates a <see cref="T:AutoFixture.Kernel.ListFavoringConstructorQuery"/> with the
            <see cref="T:System.Type"/> of the parameter.
            </returns>
        </member>
        <member name="T:AutoFixture.Xunit2.FrozenAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should be frozen so that the same instance is
            returned every time the <see cref="T:AutoFixture.IFixture"/> creates an instance of that type.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.FrozenAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.FrozenAttribute"/> class.
            </summary>
            <remarks>
            The <see cref="T:AutoFixture.Xunit2.Matching"/> criteria used to determine
            which requests will be satisfied by the frozen parameter value
            is <see cref="F:AutoFixture.Xunit2.Matching.ExactType"/>.
            </remarks>
        </member>
        <member name="M:AutoFixture.Xunit2.FrozenAttribute.#ctor(AutoFixture.Xunit2.Matching)">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.FrozenAttribute"/> class.
            </summary>
            <param name="by">
            The <see cref="T:AutoFixture.Xunit2.Matching"/> criteria used to determine
            which requests will be satisfied by the frozen parameter value.
            </param>
        </member>
        <member name="P:AutoFixture.Xunit2.FrozenAttribute.As">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> that the frozen parameter value
            should be mapped to in the <see cref="T:AutoFixture.IFixture"/>.
            </summary>
        </member>
        <member name="P:AutoFixture.Xunit2.FrozenAttribute.By">
            <summary>
            Gets the <see cref="T:AutoFixture.Xunit2.Matching"/> criteria used to determine
            which requests will be satisfied by the frozen parameter value.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.FrozenAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a <see cref="T:AutoFixture.FreezeOnMatchCustomization"/> configured
            to match requests based on the <see cref="T:System.Type"/> and optionally
            the name of the parameter.
            </summary>
            <param name="parameter">
            The parameter for which the customization is requested.
            </param>
            <returns>
            A <see cref="T:AutoFixture.FreezeOnMatchCustomization"/> configured
            to match requests based on the <see cref="T:System.Type"/> and optionally
            the name of the parameter.
            </returns>
        </member>
        <member name="T:AutoFixture.Xunit2.GreedyAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should be created using the most greedy
            constructor that can be satisfied by an <see cref="T:AutoFixture.IFixture"/>.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.GreedyAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization that associates a <see cref="T:AutoFixture.Kernel.GreedyConstructorQuery"/> with the
            <see cref="T:System.Type"/> of the parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns>
            A customization that associates a <see cref="T:AutoFixture.Kernel.GreedyConstructorQuery"/> with the
            <see cref="T:System.Type"/> of the parameter.
            </returns>
        </member>
        <member name="T:AutoFixture.Xunit2.InlineAutoDataAttribute">
            <summary>
            Provides a data source for a data theory, with the data coming from inline
            values combined with auto-generated data specimens generated by AutoFixture.
            </summary>
        </member>
        <member name="P:AutoFixture.Xunit2.InlineAutoDataAttribute.AutoDataAttribute">
            <summary>
            Gets the attribute used to automatically generate the remaining theory parameters, which are not fixed.
            </summary>
        </member>
        <member name="P:AutoFixture.Xunit2.InlineAutoDataAttribute.Values">
            <summary>
            Gets the data values to pass to the theory.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.InlineAutoDataAttribute.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.InlineAutoDataAttribute"/> class.
            </summary>
            <param name="values">The data values to pass to the theory.</param>
        </member>
        <member name="M:AutoFixture.Xunit2.InlineAutoDataAttribute.#ctor(Xunit.Sdk.DataAttribute,System.Object[])">
             <summary>
             Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.InlineAutoDataAttribute"/> class.
             </summary>
             <param name="autoDataAttribute">An <see cref="T:Xunit.Sdk.DataAttribute"/>.</param>
             <param name="values">The data values to pass to the theory.</param>
             <remarks>
             <para>
             This constructor overload exists to enable a derived attribute to
             supply a custom <see cref="T:Xunit.Sdk.DataAttribute" /> that again may
             contain custom behavior.
             </para>
             </remarks>
             <example>
             In this example, TheAnswer is a Customization that changes all
             32-bit integer values to 42. This behavior is encapsulated in
             MyCustomAutoDataAttribute, and transitively in
             MyCustomInlineAutoDataAttribute. A parameterized test demonstrates
             how it can be used.
             <code>
             [Theory]
             [MyCustomInlineAutoData(1337)]
             [MyCustomInlineAutoData(1337, 7)]
             [MyCustomInlineAutoData(1337, 7, 42)]
             public void CustomInlineDataSuppliesExtraValues(int x, int y, int z)
             {
                 Assert.Equal(1337, x);
                 // y can vary, so we can't express any meaningful assertion for it.
                 Assert.Equal(42, z);
             }
            
             private class MyCustomInlineAutoDataAttribute : InlineAutoDataAttribute
             {
                 public MyCustomInlineAutoDataAttribute(params object[] values) :
                     base(new MyCustomAutoDataAttribute(), values)
                 {
                 }
             }
            
             private class MyCustomAutoDataAttribute : AutoDataAttribute
             {
                 public MyCustomAutoDataAttribute() :
                     base(() => new Fixture().Customize(new TheAnswer()))
                 {
                 }
            
                 private class TheAnswer : ICustomization
                 {
                     public void Customize(IFixture fixture)
                     {
                         fixture.Inject(42);
                     }
                 }
             }
             </code>
             </example>
        </member>
        <member name="T:AutoFixture.Xunit2.Matching">
            <summary>
            The criteria used to determine which requests will be satisfied
            by the frozen specimen created for a parameter
            decorated with the <see cref="T:AutoFixture.Xunit2.FrozenAttribute"/> attribute.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.ExactType">
            <summary>
            Matches requests for the exact same <see cref="T:System.Type"/>
            as the type of the parameter.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.DirectBaseType">
            <summary>
            Matches requests for a <see cref="T:System.Type"/> that is
            a direct base of the type of the parameter.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.ImplementedInterfaces">
            <summary>
            Matches requests for an interface <see cref="T:System.Type"/> that is
            implemented by the type of the parameter.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.ParameterName">
            <summary>
            Matches requests for a <see cref="T:System.Reflection.ParameterInfo"/> whose
            <see cref="T:System.Type"/> is compatible with the type of the parameter
            and has a specific name.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.PropertyName">
            <summary>
            Matches requests for a <see cref="T:System.Reflection.PropertyInfo"/> whose
            <see cref="T:System.Type"/> is compatible with the type of the parameter
            and has a specific name.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.FieldName">
            <summary>
            Matches requests for a <see cref="T:System.Reflection.FieldInfo"/> whose
            <see cref="T:System.Type"/> is compatible with the type of the parameter
            and has a specific name.
            </summary>
        </member>
        <member name="F:AutoFixture.Xunit2.Matching.MemberName">
            <summary>
            Matches requests for a parameter, property or field whose
            <see cref="T:System.Type"/> is compatible with the type of the parameter
            and has a specific name.
            </summary>
        </member>
        <member name="T:AutoFixture.Xunit2.MemberAutoDataAttribute">
            <summary>
            Provides a data source for a data theory, with the data coming from one of the following sources
            and combined with auto-generated data specimens generated by AutoFixture:
            1. A static property
            2. A static field
            3. A static method (with parameters)
            The member must return something compatible with IEnumerable&lt;object[]&gt; with the test data.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.MemberAutoDataAttribute.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.MemberAutoDataAttribute"/> class.
            </summary>
            <param name="memberName">The name of the public static member on the test class that will provide the test data.</param>
            <param name="parameters">The parameters for the member (only supported for methods; ignored for everything else).</param>
        </member>
        <member name="M:AutoFixture.Xunit2.MemberAutoDataAttribute.#ctor(Xunit.Sdk.DataAttribute,System.String,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:AutoFixture.Xunit2.MemberAutoDataAttribute"/> class.
            </summary>
            <param name="autoDataAttribute">An <see cref="T:Xunit.Sdk.DataAttribute"/>.</param>
            <param name="memberName">The name of the public static member on the test class that will provide the test data.</param>
            <param name="parameters">The parameters for the member (only supported for methods; ignored for everything else).</param>
            <remarks>
            <para>
            This constructor overload exists to enable a derived attribute to
            supply a custom <see cref="T:Xunit.Sdk.DataAttribute" /> that again may
            contain custom behavior.
            </para>
            </remarks>
        </member>
        <member name="P:AutoFixture.Xunit2.MemberAutoDataAttribute.AutoDataAttribute">
            <summary>
            Gets the attribute used to automatically generate the remaining theory parameters, which are not fixed.
            </summary>
        </member>
        <member name="P:AutoFixture.Xunit2.MemberAutoDataAttribute.MemberName">
            <summary>
            Gets the member name.
            </summary>
        </member>
        <member name="P:AutoFixture.Xunit2.MemberAutoDataAttribute.Parameters">
            <summary>
            Gets the parameters passed to the member. Only supported for static methods.
            </summary>
        </member>
        <member name="T:AutoFixture.Xunit2.ModestAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should be created using the most modest
            constructor that can be satisfied by an <see cref="T:AutoFixture.IFixture"/>.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.ModestAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization that associates a <see cref="T:AutoFixture.Kernel.ModestConstructorQuery"/> with the
            <see cref="T:System.Type"/> of the parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns>
            A customization that associates a <see cref="T:AutoFixture.Kernel.ModestConstructorQuery"/> with the
            <see cref="T:System.Type"/> of the parameter.
            </returns>
        </member>
        <member name="T:AutoFixture.Xunit2.NoAutoPropertiesAttribute">
            <summary>
            An attribute that can be applied to parameters in an <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/>-driven
            Theory to indicate that the parameter value should not have properties auto populated
            when the <see cref="T:AutoFixture.IFixture"/> creates an instance of that type.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.NoAutoPropertiesAttribute.GetCustomization(System.Reflection.ParameterInfo)">
            <summary>
            Gets a customization that stops auto population of properties for the type of the parameter.
            </summary>
            <param name="parameter">The parameter for which the customization is requested.</param>
            <returns>
            A customization that stops auto population of the <see cref="T:System.Type"/> of the parameter.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="parameter"/> is null.
            </exception>
        </member>
        <member name="T:AutoFixture.Xunit2.NoPreDiscoveryDataDiscoverer">
            <summary>
            Prevents Xunit 'pre-discovery' of tests that use the
            <see cref="T:AutoFixture.Xunit2.AutoDataAttribute"/> or <see cref="T:AutoFixture.Xunit2.InlineAutoDataAttribute"/>.
            </summary>
        </member>
        <member name="M:AutoFixture.Xunit2.NoPreDiscoveryDataDiscoverer.SupportsDiscoveryEnumeration(Xunit.Abstractions.IAttributeInfo,Xunit.Abstractions.IMethodInfo)">
            <summary>
            Always returns 'false', indicating that discovery of tests is
            not supported.
            </summary>
            <param name="dataAttribute">The attribute.</param>
            <param name="testMethod">The method being discovered.</param>
            <returns>false.</returns>
        </member>
    </members>
</doc>
